/**
 * utils/build.js
 * 
 * Convert ejs pages to static html files for deployment to Github pages
 */

var fs = require('fs');
var path = require('path');
var chalk = require('chalk');
var ejs = require('ejs');

var pagesDir = path.resolve(__dirname, '../views/pages');
var indexEjsPath = path.resolve(__dirname, '../views/index.ejs');
var sectionsDirPath = path.resolve(__dirname, '../section');
var disclaimer = `<!-- 
This file is generated by a script. See utils/build.js for build details. 
-->`

function log(str) {
  console.info(chalk.bold.blue(`utils/build.js: ${str}`));
}

/**
 * 
 * @param {String} srcFilePath - 'path/to/file.ejs' 
 * @param {String} destFilePath - 'destination/file.html'
 */
function transpile(srcFilePath, destFilePath) {
  log(`reading ${srcFilePath}...`)
  fs.readFile(srcFilePath, 'utf-8', (err, ejsData) => {
    if(err) throw err;
    log(`transpiling ${srcFilePath}...`)
    
    const html = ejs.render(ejsData, {
      // this MUST be here so ejs "include" knows where to look
      filename: srcFilePath
    });
  
    fs.writeFile(destFilePath, `${disclaimer}\n${html}`, (err) => {
      if(err) throw err;
      log('done!');
    })
  })
}

transpile(indexEjsPath, path.resolve(__dirname, '../index.html'));

fs.readdir(pagesDir, (err, files) => {
  if(err) throw err;

  // create the directory to hold the transpiled files..
  try {
    fs.mkdirSync(sectionsDirPath);
  } catch (err) {}
  
  // transpile views/pages/*.ejs to section/*.html
  for(const fileName of files) {
    const absFilePath = path.join(pagesDir, fileName);
    // replace .ejs -> .html
    const newFileName = fileName.replace(/\..+/, '.html');
    transpile(absFilePath, path.join(sectionsDirPath, newFileName));
  }
})